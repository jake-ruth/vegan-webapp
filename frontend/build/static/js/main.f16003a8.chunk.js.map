{"version":3,"sources":["pages/LoginPage/index.tsx","pages/Register/index.tsx","components/Navbar/index.tsx","components/RecipeCard/index.tsx","components/Footer/index.tsx","pages/HomePage/index.tsx","components/Modal/index.tsx","pages/AboutPage/index.tsx","pages/ViewRecipePage/index.tsx","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginPage","RegisterPage","React","useState","setEmail","setPassword","setFirstName","setLastName","className","src","process","onSubmit","type","placeholder","onChange","e","target","value","href","Navbar","style","width","RecipeCard","props","display","alt","objectFit","Footer","textAlign","HomePage","fontStyle","justifyContent","margin","justifyItems","Modal","visible","children","onClick","setVisible","AboutPage","showModal","setShowModal","ViewRecipePage","BaseRouter","path","exact","component","App","data-testid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f16003a8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const LoginPage = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nexport const RegisterPage = () => {\n  const [email, setEmail] = React.useState<string>('');\n  const [password, setPassword] = React.useState<string>('');\n  const [passwordConfirm, setPasswordConfirm] = React.useState<string>('');\n  const [firstName, setFirstName] = React.useState<string>('');\n  const [lastName, setLastName] = React.useState<string>('');\n\n  const registerUser = () => {\n    //auth logic here\n  };\n\n  return (\n    <div className='login'>\n      <img src={`${process.env.PUBLIC_URL}/veggies.jpg`} className='login__img' />\n      <form onSubmit={() => registerUser()} className='login__form'>\n        <h2>Register Account</h2>\n\n        <label>First Name</label>\n        <input type='text' placeholder='Enter first name...' onChange={(e) => setFirstName(e.target.value)} />\n\n        <label>Last Name</label>\n        <input type='text' placeholder='Enter last name...' onChange={(e) => setLastName(e.target.value)} />\n\n        <label>Email</label>\n        <input type='text' placeholder='Enter email...' onChange={(e) => setEmail(e.target.value)} />\n\n        <label>Password</label>\n        <input type='password' placeholder='Enter password...' onChange={(e) => setPassword(e.target.value)} />\n\n        <label>Confirm Password</label>\n        <input type='password' placeholder='Enter password...' onChange={(e) => setPassword(e.target.value)} />\n\n        <input type='submit' value='Submit' />\n        <div className='sign-up-link'>\n          Already have an account? Sign in <a href='/login'>here</a>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Navbar = () => {\n  return (\n    <header className='header'>\n      <a href='/' className='logo'>\n        <img src={`${process.env.PUBLIC_URL}/logo.svg`} style={{ width: '250px' }} />\n      </a>\n      <nav>\n        <ul className='nav__links'>\n          <li>\n            <a href='#'>Recipes</a>\n          </li>\n          <li>\n            <a href='/about'>About</a>\n          </li>\n        </ul>\n      </nav>\n      <a className='cta' href='/login'>\n        <button className='btn-primary'>Log In</button>\n      </a>\n    </header>\n  );\n};\n","import React from 'react';\n\ninterface Props {}\n\nexport const RecipeCard = (props: Props) => {\n  return (\n    <a className='recipe-card' style={{ display: 'flex' }} href='/viewRecipe'>\n      <img src={`${process.env.PUBLIC_URL}/veggies.jpg`} alt='Avatar' style={{ width: '10em', objectFit: 'cover' }} />\n      <div className='container'>\n        <h4>\n          <b>Tempeh Stirfry</b>\n        </h4>\n        <p>A magical recipe. This potion will kill your first born child and allow you to fly.</p>\n      </div>\n    </a>\n  );\n};\n","import React from 'react';\n\nexport const Footer = () => {\n  return (\n    <div className='footer-container'>\n      <footer className='footer'>\n        <p style={{ textAlign: 'center' }}>Plant Based Plates 2020</p>\n      </footer>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { RecipeCard } from '../../components/RecipeCard';\nimport { Footer } from '../../components/Footer';\n\nexport const HomePage = () => {\n  return (\n    <div>\n      <Navbar />\n      <h1 style={{ textAlign: 'center' }}>Good Afternoon, Jake!</h1>\n      <p style={{ textAlign: 'center', fontStyle: 'italic' }}>\n        \"An object for pleasure and not a living breathing human being. It seems to make it easier to do things you shouldn't do.\"\n        - Jeffery Dahmer\n      </p>\n\n      <div style={{ display: 'flex', justifyContent: 'space-between', margin: '0 2em' }}>\n        <div style={{ width: '30vw', justifyItems: 'center' }}>\n          <input type='text' placeholder='Search for recipes...' />\n        </div>\n        <select>\n          <option>New Recipes</option>\n          <option>Breakfast</option>\n          <option>Lunch</option>\n          <option>Dinner</option>\n          <option>Dessert</option>\n        </select>\n      </div>\n\n      <div className='container'>\n        <h2>New Recipes:</h2>\n        <div className='recipe-card-container'>\n          <RecipeCard />\n          <RecipeCard />\n          <RecipeCard />\n        </div>\n        <hr />\n        <h2>All Recipes:</h2>\n        <div className='recipe-card-container'>\n          <RecipeCard />\n          <RecipeCard />\n          <RecipeCard />\n          <RecipeCard />\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { FaTimes } from 'react-icons/fa';\n\ninterface Props {\n  visible: boolean;\n  setVisible?: (value: boolean) => void;\n  children?: any;\n}\n\nexport const Modal = (props: Props) => {\n  return (\n    <div className={props.visible ? 'modal-background-active' : 'modal-background'}>\n      <div className='modal'>\n        {props.children}\n        <span className='modal-close' onClick={() => props.setVisible && props.setVisible(false)}>\n          <FaTimes />\n        </span>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { Footer } from '../../components/Footer';\nimport { Modal } from '../../components/Modal';\n\nexport const AboutPage = () => {\n  const [showModal, setShowModal] = React.useState<boolean>(false);\n\n  return (\n    <div className='about-page'>\n      <Navbar />\n      <div>\n        <h1>About Us</h1>\n        <div className='about-page__content'>\n          <p className='about-page__description'>\n            Plant based plates is a web app created by myself (Jake Ruth) as a way to bring plant based eaters together to share\n            recipes, insights, and spread the joy of vegan cooking! I have found immense joy in creating meals are low cost,\n            ethical, and better for the environment! Eating plant based is a great and easy way to do all of these things. My hope\n            is that with our community, we can grow a large collection of plant based recipes to show the world that you don't\n            have to restrict to eat a vegan diet! :)\n          </p>\n          <div className='about-page__contact'>\n            <h2>Contact Us!</h2>\n            <p>\n              Send an email to <strong>plantbasedplates@gmail.com</strong> for feedback and suggestions\n            </p>\n            <button className='btn-primary' onClick={() => setShowModal(true)}>\n              Sign up for mailing list!\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className='footer-fixed'>\n        <Footer />\n      </div>\n      <Modal visible={showModal} setVisible={setShowModal}>\n        <h2>Subscribe to our mailing list!</h2>\n        <label>Enter your email:</label>\n        <input type='text' />\n        <button className='btn-primary' onClick={() => setShowModal(!showModal)}>\n          Submit\n        </button>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { Footer } from '../../components/Footer';\n\nexport const ViewRecipePage = () => {\n  return (\n    <div>\n      <Navbar />\n      <div className='view-recipe'>\n        <div className='view-recipe__header'>\n          <img src={`${process.env.PUBLIC_URL}/veggieStirFry.jpg`} alt='stir fry' className='view-recipe__img' />\n          <div>\n            <h1>Tempeh Stirfry</h1>\n            <p>Prep Time: 10 minutes</p>\n            <p>Cook Time: 20 minutes</p>\n            <p>Total Time: 30 minutes</p>\n          </div>\n        </div>\n        <hr />\n        <div className='view-recipe__content'>\n          <div className='view-recipe__item'>\n            <h2>Ingredients:</h2>\n            <ul>\n              <li>Head</li>\n              <li>2 Legs</li>\n              <li>2 Arms</li>\n              <li>Eye sockets</li>\n            </ul>\n          </div>\n          <div className='view-recipe__item'>\n            <h2>Instructions:</h2>\n            <ol>\n              <li>Kill First born child.</li>\n              <li>Chop up the body and skin the flesh from the boy</li>\n              <li>Saute very slightly, however not too much</li>\n              <li>Create a small slice in the head, this is important</li>\n              <li>Enjoy! Serves up to 3 people.</li>\n              <li>Saute very slightly, however not too much</li>\n            </ol>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { LoginPage } from '../pages/LoginPage';\nimport { RegisterPage } from '../pages/Register';\nimport { HomePage } from '../pages/HomePage';\nimport { AboutPage } from '../pages/AboutPage';\nimport { ViewRecipePage } from '../pages/ViewRecipePage';\n\nexport const BaseRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact component={HomePage} />\n        <Route path='/login' component={LoginPage} />\n        <Route path='/register' component={RegisterPage} />\n        <Route path='/about' component={AboutPage} />\n        <Route path='/viewRecipe' component={ViewRecipePage} />\n      </Switch>\n    </Router>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { BaseRouter } from './router';\n\nfunction App() {\n  return (\n    <header data-testid=\"app-element\">\n      <BaseRouter />\n    </header>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}