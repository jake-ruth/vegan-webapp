{"version":3,"sources":["pages/LoginPage/index.tsx","pages/Register/index.tsx","components/Navbar/index.tsx","components/RecipeCard/index.tsx","components/Footer/index.tsx","controllers/RecipeController.ts","pages/HomePage/index.tsx","components/Modal/index.tsx","pages/AboutPage/index.tsx","pages/ViewRecipePage/index.tsx","pages/CreateRecipe/index.tsx","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginPage","React","useState","email","setEmail","password","setPassword","className","src","process","onSubmit","e","preventDefault","axios","post","then","res","console","log","type","name","onChange","target","value","href","RegisterPage","setFirstName","setLastName","placeholder","Navbar","style","width","RecipeCard","props","display","recipe","id","objectFit","title","description","Footer","textAlign","RecipeController","pageRecipes","pageNumber","a","get","recipes","getRecipeById","createRecipe","HomePage","setRecipes","page","setPage","useEffect","data","map","index","key","Button","onClick","Modal","visible","children","setVisible","AboutPage","showModal","setShowModal","ViewRecipePage","setRecipe","match","params","recipeId","alt","prepMinutes","cookMinutes","Number","ingredients","ingredient","instructions","CreateRecipe","useForm","handleSubmit","errors","control","useFieldArray","fields","append","remove","history","useHistory","getIngredients","ingredientsArray","push","cookHours","prepHours","yield","alert","JSON","stringify","fontStyle","as","TextField","rules","required","label","message","multiline","variant","rows","size","borderRadius","color","Divider","defaultValue","BaseRouter","path","exact","component","App","theme","createMuiTheme","palette","primary","main","secondary","data-testid","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a6692fa7.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nexport const LoginPage = () => {\n  const [email, setEmail] = React.useState<string>('');\n  const [password, setPassword] = React.useState<string>('');\n\n  const loginUser = (e: any) => {\n    e.preventDefault();\n\n    axios.post(`${process.env.REACT_APP_BACKEND_URL}/login`, { email, password }).then((res) => console.log(res));\n    // Logic to hit auth\n    // window.location.href = '/';\n  };\n\n  return (\n    <div className='login'>\n      <img src={`${process.env.PUBLIC_URL}/veggies.jpg`} className='login__img' />\n      <form onSubmit={loginUser} className='login__form container'>\n        <h2>Log into Plant Based Plate</h2>\n        <div className='floating-label'>\n          <label>Email</label>\n          <input type='text' name='email' onChange={(e) => setEmail(e.target.value)} />\n        </div>\n\n        <label>Password</label>\n        <input type='text' name='password' onChange={(e) => setPassword(e.target.value)} />\n\n        <input type='submit' value='Submit' />\n        <div className='sign-up-link'>\n          Don't have an account yet? Sign up <a href='/register'>here</a>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const RegisterPage = () => {\n  const [email, setEmail] = React.useState<string>('');\n  const [password, setPassword] = React.useState<string>('');\n  const [passwordConfirm, setPasswordConfirm] = React.useState<string>('');\n  const [firstName, setFirstName] = React.useState<string>('');\n  const [lastName, setLastName] = React.useState<string>('');\n\n  const registerUser = () => {\n    //auth logic here\n  };\n\n  return (\n    <div className='login'>\n      <img src={`${process.env.PUBLIC_URL}/veggies.jpg`} className='login__img' />\n      <form onSubmit={() => registerUser()} className='login__form'>\n        <h2>Register Account</h2>\n\n        <label>First Name</label>\n        <input type='text' placeholder='Enter first name...' onChange={(e) => setFirstName(e.target.value)} />\n\n        <label>Last Name</label>\n        <input type='text' placeholder='Enter last name...' onChange={(e) => setLastName(e.target.value)} />\n\n        <label>Email</label>\n        <input type='text' placeholder='Enter email...' onChange={(e) => setEmail(e.target.value)} />\n\n        <label>Password</label>\n        <input type='password' placeholder='Enter password...' onChange={(e) => setPassword(e.target.value)} />\n\n        <label>Confirm Password</label>\n        <input type='password' placeholder='Enter password...' onChange={(e) => setPassword(e.target.value)} />\n\n        <input type='submit' value='Submit' />\n        <div className='sign-up-link'>\n          Already have an account? Sign in <a href='/login'>here</a>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Navbar = () => {\n  return (\n    <header className='header'>\n      <a href='/' className='logo'>\n        <img src={`${process.env.PUBLIC_URL}/logo.svg`} style={{ width: '250px' }} />\n      </a>\n      <nav>\n        <ul className='nav__links'>\n          <li>\n            <a href='/createRecipe'>Create Recipe</a>\n          </li>\n          <li>\n            <a href='#'>Recipes</a>\n          </li>\n          <li>\n            <a href='/about'>About</a>\n          </li>\n        </ul>\n      </nav>\n      <a className='cta' href='/loginPage'>\n        <button className='btn-primary'>Log In</button>\n      </a>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Recipe } from '../../models/Recipe';\n\ninterface Props {\n  recipe: Recipe;\n}\n\nexport const RecipeCard = (props: Props) => {\n  return (\n    <a className='recipe-card' style={{ display: 'flex' }} href={`/viewRecipe/${props.recipe.id}`}>\n      <img src={`${process.env.PUBLIC_URL}/veggies.jpg`} style={{ width: '10em', objectFit: 'cover' }} />\n      <div className='container'>\n        <h4>\n          <b>{props.recipe.title}</b>\n        </h4>\n        <p>{props.recipe.description}</p>\n      </div>\n    </a>\n  );\n};\n","import React from 'react';\n\nexport const Footer = () => {\n  return (\n    <div className='footer-container'>\n      <footer className='footer'>\n        <p style={{ textAlign: 'center' }}>Plant Based Plates 2020</p>\n      </footer>\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { Recipe } from '../models/Recipe';\n\nexport class RecipeController {\n  static pageRecipes = async (pageNumber: number) => {\n    try {\n      console.log(process.env.REACT_APP_BACKEND_URL);\n      let recipes = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/pageRecipes/${pageNumber}`);\n      return recipes;\n    } catch (err) {\n      console.log('ERROR: ', err);\n    }\n  };\n\n  static getRecipeById = async (id: number) => {\n    try {\n      let recipe = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/getRecipeById/${id}`);\n\n      return recipe;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  static createRecipe = async (recipe: Recipe) => {\n    try {\n      return axios.post(`${process.env.REACT_APP_BACKEND_URL}/createRecipe`, recipe);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { RecipeCard } from '../../components/RecipeCard';\nimport { Footer } from '../../components/Footer';\nimport { ApplicationUserController } from '../../controllers/ApplicationUserController';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { Recipe } from '../../models/Recipe';\nimport { Button } from '@material-ui/core';\n\nexport const HomePage = () => {\n  const [recipes, setRecipes] = React.useState<Recipe[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    RecipeController.pageRecipes(page).then((res: any) => {\n      setRecipes(res.data);\n    });\n  }, [page]);\n\n  return (\n    <div>\n      <Navbar />\n      {/* <h1 style={{ textAlign: 'center' }}>Good Afternoon, Jake!</h1>\n      <p style={{ textAlign: 'center', fontStyle: 'italic' }}>\n        \"An object for pleasure and not a living breathing human being. It seems to make it easier to do things you shouldn't do.\"\n        - Jeffery Dahmer\n      </p>\n\n      <div style={{ display: 'flex', justifyContent: 'space-between', margin: '0 2em' }}>\n        <div style={{ width: '30vw', justifyItems: 'center' }}>\n          <input type='text' placeholder='Search for recipes...' />\n        </div>\n        <select>\n          <option>New Recipes</option>\n          <option>Breakfast</option>\n          <option>Lunch</option>\n          <option>Dinner</option>\n          <option>Dessert</option>\n        </select>\n      </div> */}\n\n      <div className='container'>\n        <h2>All Recipes:</h2>\n        <div className='recipe-card-container'>\n          {recipes.map((recipe, index) => (\n            <RecipeCard key={index} recipe={recipe} />\n          ))}\n          <Button onClick={() => page !== 0 && setPage(page - 1)}>Previous Page</Button>\n          <Button onClick={() => setPage(page + 1)}>Next Page</Button>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { FaTimes } from 'react-icons/fa';\n\ninterface Props {\n  visible: boolean;\n  setVisible?: (value: boolean) => void;\n  children?: any;\n}\n\nexport const Modal = (props: Props) => {\n  return (\n    <div className={props.visible ? 'modal-background-active' : 'modal-background'}>\n      <div className='modal'>\n        {props.children}\n        <span className='modal-close' onClick={() => props.setVisible && props.setVisible(false)}>\n          <FaTimes />\n        </span>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { Footer } from '../../components/Footer';\nimport { Modal } from '../../components/Modal';\n\nexport const AboutPage = () => {\n  const [showModal, setShowModal] = React.useState<boolean>(false);\n\n  return (\n    <div className='about-page'>\n      <Navbar />\n      <div>\n        <h1>About Us</h1>\n        <div className='about-page__content'>\n          <p className='about-page__description'>\n            Plant based plates is a web app created by myself (Jake Ruth) as a way to bring plant based eaters together to share\n            recipes, insights, and spread the joy of vegan cooking! I have found immense joy in creating meals are low cost,\n            ethical, and better for the environment! Eating plant based is a great and easy way to do all of these things. My hope\n            is that with our community, we can grow a large collection of plant based recipes to show the world that you don't\n            have to restrict to eat a vegan diet! :)\n          </p>\n          <div className='about-page__contact'>\n            <h2>Contact Us!</h2>\n            <p>\n              Send an email to <strong>plantbasedplates@gmail.com</strong> for feedback and suggestions\n            </p>\n            <button className='btn-primary' onClick={() => setShowModal(true)}>\n              Sign up for mailing list!\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className='footer-fixed'>\n        <Footer />\n      </div>\n      <Modal visible={showModal} setVisible={setShowModal}>\n        <h2>Subscribe to our mailing list!</h2>\n        <label>Enter your email:</label>\n        <input type='text' />\n        <button className='btn-primary' onClick={() => setShowModal(!showModal)}>\n          Submit\n        </button>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { Footer } from '../../components/Footer';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { Recipe } from '../../models/Recipe';\n\nexport const ViewRecipePage = (props: any) => {\n  const [recipe, setRecipe] = React.useState<Recipe | null>(null);\n\n  React.useEffect(() => {\n    RecipeController.getRecipeById(props.match.params.recipeId).then((res) => {\n      console.log('RES: ', res);\n\n      setRecipe(res!.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <div className='view-recipe'>\n        <div className='view-recipe__header'>\n          <img src={`${process.env.PUBLIC_URL}/veggieStirFry.jpg`} alt='stir fry' className='view-recipe__img' />\n          <div>\n            <h1>{recipe?.title}</h1>\n            <p>Prep Time: {recipe?.prepMinutes} minutes</p>\n            <p>Cook Time: {recipe?.cookMinutes} minutes</p>\n            <p>Total Time: {Number(recipe?.prepMinutes!) + Number(recipe?.cookMinutes!)} minutes</p>\n          </div>\n        </div>\n        <hr />\n        <div className='view-recipe__content'>\n          <div className='view-recipe__item'>\n            <h2>Ingredients:</h2>\n            <ul>\n              {recipe?.ingredients.map((ingredient, index) => {\n                return <li key={index}>{ingredient}</li>;\n              })}\n            </ul>\n          </div>\n          <div className='view-recipe__item'>\n            <h2>Instructions:</h2>\n            <p className='view-recipe__instructions'>{recipe?.instructions}</p>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { Controller, useForm, useFieldArray } from 'react-hook-form';\nimport { Button, Divider, TextField } from '@material-ui/core';\nimport { Recipe } from '../../models/Recipe';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { useHistory } from 'react-router-dom';\n\ninterface IFormInput {\n  title: string;\n  description: string;\n  instructions: string;\n  ingredients: string[];\n  prepHours: number;\n  prepMinutes: number;\n  cookHours: number;\n  cookMinutes: number;\n  yield: string;\n}\n\nexport const CreateRecipe = () => {\n  const { handleSubmit, errors, control } = useForm<IFormInput>();\n  const { fields, append, remove } = useFieldArray({ control, name: 'ingredients' });\n  const history = useHistory();\n\n  const onSubmit = async (data: IFormInput) => {\n    const getIngredients = () => {\n      let ingredientsArray: string[] = [];\n      data.ingredients.map((ingredient: any) => {\n        ingredientsArray.push(ingredient.value);\n      });\n\n      return ingredientsArray;\n    };\n\n    let recipe: Recipe = {\n      title: data.title,\n      description: data.description,\n      cookMinutes: data.cookHours * 60 + data.cookMinutes,\n      prepMinutes: Number(data.prepMinutes) + data.prepHours * 60,\n      ingredients: getIngredients(),\n      instructions: data.instructions,\n      yield: data.yield\n    };\n\n    try {\n      await RecipeController.createRecipe(recipe);\n      history.push('/');\n    } catch (err) {\n      alert(JSON.stringify(err));\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <form onSubmit={handleSubmit(onSubmit)} className='login-page__card'>\n        <h1 style={{ fontStyle: 'italic', textAlign: 'center' }}>Create Recipe</h1>\n        <div className='create-recipe'>\n          <Controller\n            as={TextField}\n            control={control}\n            rules={{ required: 'Title Required' }}\n            type='text'\n            id='title'\n            name='title'\n            label='Title'\n          />\n          <div className='error'>{errors.title && errors.title.message}</div>\n\n          <Controller\n            as={TextField}\n            control={control}\n            multiline\n            variant='outlined'\n            rows={5}\n            name='description'\n            label='Description'\n            rules={{ required: 'Description Required' }}\n          />\n          <div className='error'>{errors.description && errors.description.message}</div>\n\n          <Controller\n            as={TextField}\n            control={control}\n            multiline\n            variant='outlined'\n            rows={5}\n            name='instructions'\n            label='Instructions'\n            rules={{ required: 'Instructions Required' }}\n          />\n          <div className='error'>{errors.description && errors.description.message}</div>\n\n          <h3 style={{ fontStyle: 'italic' }}>Ingredients</h3>\n\n          <ul>\n            {fields.map((ingredient, index) => (\n              <li key={index}>\n                <Controller as={TextField} name={`ingredients[${index}].value`} control={control} />\n\n                <Button\n                  variant='contained'\n                  size='small'\n                  style={{ borderRadius: 0 }}\n                  color='secondary'\n                  onClick={() => remove(index)}>\n                  Delete\n                </Button>\n              </li>\n            ))}\n          </ul>\n\n          <Button type='button' onClick={() => append({ value: '' })}>\n            Add Ingredient\n          </Button>\n\n          <Divider />\n          <h3 style={{ fontStyle: 'italic' }}>Prep Time</h3>\n          <div style={{ display: 'flex' }}>\n            <Controller as={TextField} control={control} type='number' name='prepHours' label='Hours' defaultValue={0} />\n            <Controller as={TextField} control={control} type='number' name='prepMinutes' label='Minutes' defaultValue={0} />\n          </div>\n\n          <h3 style={{ fontStyle: 'italic' }}>Cook Time</h3>\n          <div style={{ display: 'flex' }}>\n            <Controller as={TextField} control={control} type='number' name='cookHours' label='Hours' defaultValue={0} />\n            <Controller as={TextField} control={control} type='number' name='cookMinutes' label='Minutes' defaultValue={0} />\n          </div>\n\n          <br />\n\n          <Controller as={TextField} control={control} name='yield' label='Yield' />\n\n          <Button type='submit' variant='contained' color='primary' style={{ borderRadius: 0 }}>\n            Save Recipe!\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { LoginPage } from '../pages/LoginPage';\nimport { RegisterPage } from '../pages/Register';\nimport { HomePage } from '../pages/HomePage';\nimport { AboutPage } from '../pages/AboutPage';\nimport { ViewRecipePage } from '../pages/ViewRecipePage';\nimport { CreateRecipe } from '../pages/CreateRecipe';\n\nexport const BaseRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact component={HomePage} />\n        <Route path='/loginPage' component={LoginPage} />\n        <Route path='/register' component={RegisterPage} />\n        <Route path='/about' component={AboutPage} />\n        <Route path='/viewRecipe/:recipeId' component={ViewRecipePage} />\n        <Route path='/createRecipe' component={CreateRecipe} />\n      </Switch>\n    </Router>\n  );\n};\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport './App.scss';\nimport { BaseRouter } from './router';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#303030'\n      },\n      secondary: {\n        main: '#FF5E5B'\n      }\n    }\n  });\n\n  return (\n    <header data-testid='app-element'>\n      <MuiThemeProvider theme={theme}>\n        <BaseRouter />\n      </MuiThemeProvider>\n    </header>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}