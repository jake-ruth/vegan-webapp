{"version":3,"sources":["pages/LoginPage/index.tsx","pages/Register/index.tsx","components/Navbar/index.tsx","components/RecipeCard/index.tsx","components/Footer/index.tsx","controllers/RecipeController.ts","pages/HomePage/index.tsx","components/Modal/index.tsx","pages/AboutPage/index.tsx","pages/ViewRecipePage/index.tsx","pages/CreateRecipe/components/CreateRecipeContent.tsx","pages/CreateRecipe/components/CropTest.jsx","pages/CreateRecipe/index.tsx","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginPage","React","useState","email","setEmail","password","setPassword","className","src","process","onSubmit","e","preventDefault","axios","post","then","res","console","log","type","name","onChange","target","value","href","RegisterPage","setFirstName","setLastName","placeholder","Navbar","style","width","RecipeCard","props","recipeImageUrl","setRecipeImageUrl","loading","setLoading","useEffect","recipe","storage","firebase","refFromURL","imageUrlUuid","imageExtension","getDownloadURL","url","pageTrigger","id","title","description","fontStyle","prepMinutes","cookMinutes","Rating","readOnly","Footer","textAlign","RecipeController","pageRecipes","pageNumber","a","get","pageRecipesByName","searchString","getRecipeById","createRecipe","HomePage","recipes","setRecipes","page","setPage","recipesCount","setRecipesCount","setSearchString","setPageTrigger","pageAllRecipes","data","totalCount","display","justifyContent","margin","borderRadius","newValue","onRequestSearch","length","onCancelSearch","map","index","key","Pagination","count","Math","ceil","color","shape","Modal","visible","children","onClick","setVisible","AboutPage","showModal","setShowModal","ViewRecipePage","setRecipe","match","params","recipeId","catch","err","objectFit","alt","Number","ingredients","ingredient","instructions","CreateRecipeContent","useFormContext","control","errors","useFieldArray","fields","append","remove","as","TextField","rules","required","label","fullWidth","message","multiline","variant","rows","marginTop","defaultValue","Button","size","CropTest","setRecipeImageFile","upImg","setUpImg","imgRef","useRef","previewCanvasRef","unit","aspect","crop","setCrop","completedCrop","setCompletedCrop","pixelRatio","window","devicePixelRatio","generateDownload","previewCanvas","canvas","newWidth","newHeight","tmpCanvas","document","createElement","height","ctx","getContext","drawImage","alert","getResizedCanvas","toBlob","blob","file","File","onLoad","useCallback","img","current","image","scaleX","naturalWidth","scaleY","naturalHeight","setTransform","imageSmoothingQuality","x","y","accept","files","reader","FileReader","addEventListener","result","readAsDataURL","htmlFor","endIcon","component","onImageLoaded","c","onComplete","ref","round","CreateRecipe","methods","useForm","defaultValues","history","useHistory","recipeImageFile","uploadImage","imageUuid","fileExtension","split","pop","child","put","formatIngredients","ingredientsArray","push","cookHours","prepHours","yieldAmount","handleSubmit","maxWidth","BaseRouter","path","exact","App","theme","createMuiTheme","palette","primary","main","secondary","error","success","typography","fontFamily","join","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","data-testid","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8546d13d.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nexport const LoginPage = () => {\n  const [email, setEmail] = React.useState<string>('');\n  const [password, setPassword] = React.useState<string>('');\n\n  const loginUser = (e: any) => {\n    e.preventDefault();\n\n    axios.post(`${process.env.REACT_APP_BACKEND_URL}/login`, { email, password }).then((res) => console.log(res));\n    // Logic to hit auth\n    // window.location.href = '/';\n  };\n\n  return (\n    <div className='login'>\n      <img src={`${process.env.PUBLIC_URL}/veggies.jpg`} className='login__img' />\n      <form onSubmit={loginUser} className='login__form container'>\n        <h2>Log into Plant Based Plate</h2>\n        <div className='floating-label'>\n          <label>Email</label>\n          <input type='text' name='email' onChange={(e) => setEmail(e.target.value)} />\n        </div>\n\n        <label>Password</label>\n        <input type='text' name='password' onChange={(e) => setPassword(e.target.value)} />\n\n        <input type='submit' value='Submit' />\n        <div className='sign-up-link'>\n          Don't have an account yet? Sign up <a href='/register'>here</a>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const RegisterPage = () => {\n  const [email, setEmail] = React.useState<string>('');\n  const [password, setPassword] = React.useState<string>('');\n  const [passwordConfirm, setPasswordConfirm] = React.useState<string>('');\n  const [firstName, setFirstName] = React.useState<string>('');\n  const [lastName, setLastName] = React.useState<string>('');\n\n  const registerUser = () => {\n    //auth logic here\n  };\n\n  return (\n    <div className='login'>\n      <img src={`${process.env.PUBLIC_URL}/veggies.jpg`} className='login__img' />\n      <form onSubmit={() => registerUser()} className='login__form'>\n        <h2>Register Account</h2>\n\n        <label>First Name</label>\n        <input type='text' placeholder='Enter first name...' onChange={(e) => setFirstName(e.target.value)} />\n\n        <label>Last Name</label>\n        <input type='text' placeholder='Enter last name...' onChange={(e) => setLastName(e.target.value)} />\n\n        <label>Email</label>\n        <input type='text' placeholder='Enter email...' onChange={(e) => setEmail(e.target.value)} />\n\n        <label>Password</label>\n        <input type='password' placeholder='Enter password...' onChange={(e) => setPassword(e.target.value)} />\n\n        <label>Confirm Password</label>\n        <input type='password' placeholder='Enter password...' onChange={(e) => setPassword(e.target.value)} />\n\n        <input type='submit' value='Submit' />\n        <div className='sign-up-link'>\n          Already have an account? Sign in <a href='/login'>here</a>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Navbar = () => {\n  return (\n    <header className='header'>\n      <a href='/' className='logo'>\n        <img src={`${process.env.PUBLIC_URL}/logo.svg`} style={{ width: '250px' }} />\n      </a>\n      <nav>\n        <ul className='nav__links'>\n          <li>\n            <a href='/createRecipe'>Create Recipe</a>\n          </li>\n          <li>\n            <a href='#'>Recipes</a>\n          </li>\n          <li>\n            <a href='/about'>About</a>\n          </li>\n        </ul>\n      </nav>\n      <a className='cta' href='/loginPage'>\n        <button className='btn-primary'>Log In</button>\n      </a>\n    </header>\n  );\n};\n","import { Rating } from '@material-ui/lab';\nimport React from 'react';\nimport { Recipe } from '../../models/Recipe';\nimport firebase from 'firebase';\nimport { SettingsRemoteOutlined } from '@material-ui/icons';\n\ninterface Props {\n  recipe: Recipe;\n  pageTrigger: boolean;\n}\n\nexport const RecipeCard = (props: Props) => {\n  const [recipeImageUrl, setRecipeImageUrl] = React.useState('');\n  const [loading, setLoading] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    console.log('REC:', props.recipe);\n    // Get a reference to the storage service, which is used to create references in your storage bucket\n    var storage = firebase.storage();\n\n    console.log('STORE: ', storage);\n    //var gsRef = storage.refFromURL('gs://vegan-webapp.appspot.com/surlyCatBeingEjected.jpg');\n    const gsRef = storage.refFromURL(`gs://vegan-webapp.appspot.com/${props.recipe.imageUrlUuid}.${props.recipe.imageExtension}`);\n    gsRef.getDownloadURL().then((url: any) => {\n      console.log(url);\n      setRecipeImageUrl(url);\n      setLoading(false);\n    });\n  }, [props.pageTrigger]);\n\n  if (loading) return null;\n\n  return (\n    <a className='recipe-card' href={`/viewRecipe/${props.recipe.id}`}>\n      <img className='recipe-card__image' src={recipeImageUrl} />\n      <div className='container'>\n        <h4>\n          <b>{props.recipe.title}</b>\n        </h4>\n        <div className='recipe-card__description'>\n          <p>{props.recipe.description}</p>\n        </div>\n        <p style={{ fontStyle: 'italic' }}>Prep time: {props.recipe.prepMinutes} min.</p>\n        <p style={{ fontStyle: 'italic' }}>Cook time: {props.recipe.cookMinutes} min.</p>\n        <Rating name='read-only' value={5} readOnly />\n      </div>\n    </a>\n  );\n};\n","import React from 'react';\n\nexport const Footer = () => {\n  return (\n    <div className='footer-container'>\n      <footer className='footer'>\n        <p style={{ textAlign: 'center' }}>Plant Based Plates 2020</p>\n      </footer>\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { Recipe } from '../models/Recipe';\n\nexport class RecipeController {\n  static pageRecipes = async (pageNumber: number) => {\n    try {\n      let res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/pageRecipes/${pageNumber}`);\n      return res;\n    } catch (err) {\n      console.log('ERROR: ', err);\n    }\n  };\n\n  static pageRecipesByName = async (pageNumber: number, searchString: string) => {\n    try {\n      let res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/pageRecipesByName/${pageNumber}/${searchString}`);\n      return res;\n    } catch (err) {\n      console.log('ERR: ', err);\n    }\n  };\n\n  static getRecipeById = async (id: number) => {\n    try {\n      let recipe = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/getRecipeById/${id}`);\n\n      return recipe;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  static createRecipe = async (recipe: Recipe) => {\n    try {\n      return axios.post(`${process.env.REACT_APP_BACKEND_URL}/createRecipe`, recipe);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { RecipeCard } from '../../components/RecipeCard';\nimport { Footer } from '../../components/Footer';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { Recipe } from '../../models/Recipe';\nimport Pagination from '@material-ui/lab/Pagination';\nimport SearchBar from 'material-ui-search-bar';\n\nexport const HomePage = () => {\n  const [recipes, setRecipes] = React.useState<Recipe[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [recipesCount, setRecipesCount] = React.useState<number>(0);\n  const [searchString, setSearchString] = React.useState<string>('');\n  const [pageTrigger, setPageTrigger] = React.useState<boolean>(false);\n  const [loading, setLoading] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    pageAllRecipes();\n  }, [page]);\n\n  const pageAllRecipes = () => {\n    RecipeController.pageRecipes(page).then((res: any) => {\n      setLoading(true);\n      setRecipes(res.data.recipes);\n      setRecipesCount(res.data.totalCount);\n      setPageTrigger(!pageTrigger);\n      setLoading(false);\n    });\n  };\n\n  const searchForRecipes = () => {\n    if (searchString.length > 0) {\n      RecipeController.pageRecipesByName(page, searchString).then((res: any) => {\n        setRecipes(res.data.recipes);\n        setRecipesCount(res.data.totalCount);\n        setPageTrigger(!pageTrigger);\n      });\n    }\n  };\n\n  const handlePage = (e: any, pageNumber: number) => {\n    console.log(pageNumber);\n    setPage(pageNumber - 1);\n  };\n\n  if (loading) return null;\n\n  return (\n    <div className='home-page'>\n      <Navbar />\n      <div className='contain'>\n        <div style={{ display: 'flex', justifyContent: 'flex-end', margin: '10px' }}>\n          <div className='home-page__search-bar'>\n            <SearchBar\n              style={{ borderRadius: 3 }}\n              value={searchString}\n              onChange={(newValue) => setSearchString(newValue)}\n              onRequestSearch={() => searchForRecipes()}\n              onCancelSearch={() => {\n                setSearchString('');\n                pageAllRecipes();\n              }}\n              placeholder='Search for a recipe...'\n            />\n          </div>\n        </div>\n        <div className='recipe-card-container'>\n          {recipes.map((recipe, index) => (\n            <RecipeCard pageTrigger={pageTrigger} key={index} recipe={recipe} />\n          ))}\n        </div>\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'center', margin: '1em' }}>\n        <Pagination count={Math.ceil(recipesCount / 8)} color='primary' shape='rounded' page={page + 1} onChange={handlePage} />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'center', margin: '1em' }}>\n        <div>\n          {recipesCount} total {recipesCount === 1 ? 'recipe' : 'recipes'}\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { FaTimes } from 'react-icons/fa';\n\ninterface Props {\n  visible: boolean;\n  setVisible?: (value: boolean) => void;\n  children?: any;\n}\n\nexport const Modal = (props: Props) => {\n  return (\n    <div className={props.visible ? 'modal-background-active' : 'modal-background'}>\n      <div className='modal'>\n        {props.children}\n        <span className='modal-close' onClick={() => props.setVisible && props.setVisible(false)}>\n          <FaTimes />\n        </span>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { Footer } from '../../components/Footer';\nimport { Modal } from '../../components/Modal';\n\nexport const AboutPage = () => {\n  const [showModal, setShowModal] = React.useState<boolean>(false);\n\n  return (\n    <div className='about-page'>\n      <Navbar />\n      <div>\n        <h1>About Us</h1>\n        <div className='about-page__content'>\n          <p className='about-page__description'>\n            Plant based plates is a web app created by myself (Jake Ruth) as a way to bring plant based eaters together to share\n            recipes, insights, and spread the joy of vegan cooking! I have found immense joy in creating meals are low cost,\n            ethical, and better for the environment! Eating plant based is a great and easy way to do all of these things. My hope\n            is that with our community, we can grow a large collection of plant based recipes to show the world that you don't\n            have to restrict to eat a vegan diet! :)\n          </p>\n          <div className='about-page__contact'>\n            <h2>Contact Us!</h2>\n            <p>\n              Send an email to <strong>plantbasedplates@gmail.com</strong> for feedback and suggestions\n            </p>\n            <button className='btn-primary' onClick={() => setShowModal(true)}>\n              Sign up for mailing list!\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className='footer-fixed'>\n        <Footer />\n      </div>\n      <Modal visible={showModal} setVisible={setShowModal}>\n        <h2>Subscribe to our mailing list!</h2>\n        <label>Enter your email:</label>\n        <input type='text' />\n        <button className='btn-primary' onClick={() => setShowModal(!showModal)}>\n          Submit\n        </button>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { Footer } from '../../components/Footer';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { Recipe } from '../../models/Recipe';\nimport firebase from 'firebase';\n\nexport const ViewRecipePage = (props: any) => {\n  const [recipe, setRecipe] = React.useState<Recipe | null>(null);\n  const [recipeImageUrl, setRecipeImageUrl] = React.useState<string>('');\n  const [loading, setLoading] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    if (recipeImageUrl.length > 0) setLoading(false);\n  }, [recipeImageUrl]);\n\n  React.useEffect(() => {\n    RecipeController.getRecipeById(props.match.params.recipeId)\n      .then((res) => {\n        setRecipe(res!.data);\n\n        var storage = firebase.storage();\n\n        const gsRef = storage.refFromURL(`gs://vegan-webapp.appspot.com/${res!.data.imageUrlUuid}.${res!.data.imageExtension}`);\n        gsRef.getDownloadURL().then((url: any) => {\n          console.log(url);\n          setRecipeImageUrl(url);\n        });\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  if (recipe == null) return null;\n  if (loading) return null;\n\n  return (\n    <div>\n      <Navbar />\n      <div className='view-recipe'>\n        <div className='view-recipe__header'>\n          <img src={recipeImageUrl} style={{ objectFit: 'cover' }} alt='recipe image' className='view-recipe__img' />\n          <div>\n            <h1>{recipe?.title}</h1>\n            <p>Prep Time: {recipe?.prepMinutes} minutes</p>\n            <p>Cook Time: {recipe?.cookMinutes} minutes</p>\n            <p>Total Time: {Number(recipe?.prepMinutes!) + Number(recipe?.cookMinutes!)} minutes</p>\n          </div>\n        </div>\n        <div>{recipe.description}</div>\n        <hr />\n        <div className='view-recipe__content'>\n          <div className='view-recipe__item'>\n            <h2>Ingredients:</h2>\n            <ul>\n              {recipe?.ingredients.map((ingredient, index) => {\n                return <li key={index}>{ingredient}</li>;\n              })}\n            </ul>\n          </div>\n          <div className='view-recipe__item'>\n            <h2>Instructions:</h2>\n            <p className='view-recipe__instructions'>{recipe?.instructions}</p>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n","import { TextField, Button } from '@material-ui/core';\nimport React from 'react';\nimport { Controller, useFieldArray, useFormContext } from 'react-hook-form';\n\nexport const CreateRecipeContent = () => {\n  const { control, errors } = useFormContext(); // retrieve all hook methods\n  const { fields, append, remove } = useFieldArray({ control, name: 'ingredients' });\n  return (\n    <div className='create-recipe__content'>\n      <div className='create-recipe__section'>\n        <Controller\n          as={TextField}\n          control={control}\n          rules={{ required: 'Title Required' }}\n          type='text'\n          id='title'\n          name='title'\n          label='Title'\n          fullWidth\n        />\n        <div className='error'>{errors.title && errors.title.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          multiline\n          fullWidth\n          variant='outlined'\n          rows={5}\n          style={{ marginTop: 20 }}\n          name='description'\n          label='Description'\n          rules={{ required: 'Description Required' }}\n        />\n        <div className='error'>{errors.description && errors.description.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          multiline\n          fullWidth\n          variant='outlined'\n          rows={10}\n          style={{ marginTop: 20 }}\n          name='instructions'\n          label='Instructions'\n          rules={{ required: 'Instructions Required' }}\n        />\n        <div className='error'>{errors.description && errors.description.message}</div>\n      </div>\n\n      <div className='create-recipe__section'>\n        <h3 style={{ fontStyle: 'italic' }}>Prep Time</h3>\n        <div style={{ display: 'flex' }}>\n          <Controller as={TextField} control={control} type='number' name='prepHours' label='Hours' defaultValue={0} />\n          <Controller as={TextField} control={control} type='number' name='prepMinutes' label='Minutes' defaultValue={0} />\n        </div>\n\n        <h3 style={{ fontStyle: 'italic' }}>Cook Time</h3>\n        <div style={{ display: 'flex' }}>\n          <Controller as={TextField} control={control} type='number' name='cookHours' label='Hours' defaultValue={0} />\n          <Controller as={TextField} control={control} type='number' name='cookMinutes' label='Minutes' defaultValue={0} />\n        </div>\n        <Controller as={TextField} control={control} name='yieldAmount' label='Yield' />\n        <h3 style={{ fontStyle: 'italic' }}>Ingredients</h3>\n\n        {fields.map((ingredient, index) => (\n          <div style={{ display: 'flex' }}>\n            <Controller as={TextField} fullWidth name={`ingredients[${index}].value`} control={control} />\n            <Button variant='contained' size='small' style={{ borderRadius: 0 }} color='secondary' onClick={() => remove(index)}>\n              Delete\n            </Button>\n          </div>\n        ))}\n        <Button\n          type='button'\n          style={{ marginTop: '1em' }}\n          variant='contained'\n          color='primary'\n          size='small'\n          onClick={() => append({ value: '' })}>\n          Add Ingredient\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { Button } from '@material-ui/core';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport CameraIcon from '@material-ui/icons/CameraAlt';\n\nexport const CropTest = ({ setRecipeImageFile }) => {\n  const [upImg, setUpImg] = useState();\n  const imgRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 1 / 1 });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // Increase pixel density for crop preview quality on retina screens.\n  const pixelRatio = window.devicePixelRatio || 1;\n\n  // We resize the canvas down when saving on retina devices otherwise the image\n  // will be double or triple the preview size.\n  function getResizedCanvas(canvas, newWidth, newHeight) {\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = newWidth;\n    tmpCanvas.height = newHeight;\n\n    const ctx = tmpCanvas.getContext('2d');\n\n    try {\n      if (canvas.width > 0 && canvas.height > 0) {\n        ctx.drawImage(canvas, 0, 0, canvas.width, canvas.height, 0, 0, newWidth, newHeight);\n      }\n    } catch (err) {\n      alert(err);\n    }\n\n    return tmpCanvas;\n  }\n\n  function generateDownload(previewCanvas, crop) {\n    if (!crop || !previewCanvas) {\n      return;\n    }\n\n    const canvas = getResizedCanvas(previewCanvas, crop.width, crop.height);\n\n    canvas.toBlob(\n      (blob) => {\n        let file = new File([blob], 'png', { type: 'image/png' });\n\n        setRecipeImageFile(file);\n      },\n      'image/png',\n      1\n    );\n  }\n\n  const onSelectFile = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n      return;\n    }\n\n    const image = imgRef.current;\n    const canvas = previewCanvasRef.current;\n    const crop = completedCrop;\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = crop.width * pixelRatio;\n    canvas.height = crop.height * pixelRatio;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    generateDownload(previewCanvasRef.current, completedCrop);\n  }, [completedCrop]);\n\n  return (\n    <div className='App'>\n      <div>\n        <input style={{ display: 'none' }} type='file' id='raised-button-file' accept='image/*' onChange={onSelectFile} />\n        <label htmlFor='raised-button-file'>\n          <Button endIcon={<CameraIcon />} style={{ borderRadius: 0, marginTop: 10 }} variant='contained' component='span'>\n            Upload Photo\n          </Button>\n        </label>\n      </div>\n      <ReactCrop\n        src={upImg}\n        onImageLoaded={onLoad}\n        crop={crop}\n        onChange={(c) => setCrop(c)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n      <div>\n        <canvas\n          ref={previewCanvasRef}\n          // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n          style={{\n            width: Math.round(completedCrop?.width ?? 0),\n            height: Math.round(completedCrop?.height ?? 0),\n            display: 'none'\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { Controller, useForm, FormProvider } from 'react-hook-form';\nimport { Button, TextField } from '@material-ui/core';\nimport { Recipe } from '../../models/Recipe';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { useHistory } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { CreateRecipeContent } from './components/CreateRecipeContent';\nimport { CropTest } from './components/CropTest';\n\ninterface IFormInput {\n  title: string;\n  description: string;\n  instructions: string;\n  ingredients: any[];\n  prepHours: number;\n  prepMinutes: number;\n  cookHours: number;\n  cookMinutes: number;\n  yieldAmount: string;\n}\n\nexport const CreateRecipe = () => {\n  const methods = useForm<IFormInput>({ defaultValues: { ingredients: [{ value: '' }] } });\n\n  const history = useHistory();\n  const [recipeImageFile, setRecipeImageFile] = React.useState<File | null>(null);\n\n  const uploadImage = (imageUuid: string) => {\n    const fileExtension = recipeImageFile!.name.split('.').pop();\n\n    let rootRef = firebase.storage().ref();\n    let fileRef = rootRef.child(`${imageUuid}.${fileExtension}`);\n\n    fileRef.put(recipeImageFile!).then((res) => console.log(res));\n  };\n\n  const onSubmit = async (data: IFormInput, e: any) => {\n    const formatIngredients = () => {\n      let ingredientsArray: string[] = [];\n      data.ingredients.map((ingredient: any) => {\n        ingredientsArray.push(ingredient.value);\n      });\n\n      return ingredientsArray;\n    };\n\n    let recipe: Recipe = {\n      title: data.title,\n      description: data.description,\n      cookMinutes: Number(data.cookMinutes) + data.cookHours * 60,\n      prepMinutes: Number(data.prepMinutes) + data.prepHours * 60,\n      ingredients: formatIngredients(),\n      instructions: data.instructions,\n      yieldAmount: data.yieldAmount,\n      imageExtension: recipeImageFile!.name.split('.').pop()\n    };\n\n    try {\n      const res = await RecipeController.createRecipe(recipe);\n      uploadImage(res!.data.imageUrlUuid);\n      history.push('/');\n    } catch (err) {\n      console.log('ERR: ', err);\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <form onSubmit={methods.handleSubmit(onSubmit)}>\n        <h1 style={{ textAlign: 'center' }}>Create Recipe</h1>\n        <div className='create-recipe'>\n          <FormProvider {...methods}>\n            <CreateRecipeContent />\n          </FormProvider>\n          <br />\n          <CropTest setRecipeImageFile={setRecipeImageFile} />\n          <Button type='submit' variant='contained' color='primary' style={{ borderRadius: 0, maxWidth: 200, marginTop: '1em' }}>\n            Save Recipe!\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { LoginPage } from '../pages/LoginPage';\nimport { RegisterPage } from '../pages/Register';\nimport { HomePage } from '../pages/HomePage';\nimport { AboutPage } from '../pages/AboutPage';\nimport { ViewRecipePage } from '../pages/ViewRecipePage';\nimport { CreateRecipe } from '../pages/CreateRecipe';\n\nexport const BaseRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact component={HomePage} />\n        <Route path='/loginPage' component={LoginPage} />\n        <Route path='/register' component={RegisterPage} />\n        <Route path='/about' component={AboutPage} />\n        <Route path='/viewRecipe/:recipeId' component={ViewRecipePage} />\n        <Route path='/createRecipe' component={CreateRecipe} />\n      </Switch>\n    </Router>\n  );\n};\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport './App.scss';\nimport { BaseRouter } from './router';\nimport firebase from 'firebase';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#303030'\n      },\n      secondary: {\n        main: '#FF5E5B'\n      },\n      error: {\n        main: '#FF5E5B'\n      },\n      success: {\n        main: '#20b2aa'\n      }\n    },\n    typography: {\n      fontFamily: ['Verdana'].join(',')\n    }\n  });\n\n  var firebaseConfig = {\n    apiKey: 'AIzaSyAkL0lof7kkTmXwPw_xsyf57ZkrUwIbVxo',\n    authDomain: 'vegan-webapp.firebaseapp.com',\n    databaseURL: 'https://vegan-webapp.firebaseio.com',\n    projectId: 'vegan-webapp',\n    storageBucket: 'vegan-webapp.appspot.com',\n    messagingSenderId: '29504851544',\n    appId: '1:29504851544:web:f3981ecbd3eb6f51c7042d',\n    measurementId: 'G-2B8615KNJN'\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  return (\n    <header data-testid='app-element'>\n      <MuiThemeProvider theme={theme}>\n        <BaseRouter />\n      </MuiThemeProvider>\n    </header>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}