{"version":3,"sources":["utils/AuthService.ts","context/index.tsx","controllers/AuthController.ts","pages/LoginPage/index.tsx","pages/Register/index.tsx","components/Navbar/Drawer.tsx","components/Navbar/index.tsx","components/RecipeCard/index.tsx","components/Footer/index.tsx","utils/axios.ts","controllers/RecipeController.ts","pages/HomePage/index.tsx","components/Modal/index.tsx","pages/AboutPage/index.tsx","pages/ViewRecipePage/index.tsx","pages/CreateRecipe/components/CreateRecipeContent.tsx","pages/CreateRecipe/components/ImageCropper.jsx","pages/CreateRecipe/index.tsx","controllers/ApplicationUserController.ts","pages/AccountPage/index.tsx","router/ProtectedRoute.tsx","pages/EditRecipe/components/EditRecipeContent.tsx","pages/EditRecipe/components/CropTest.jsx","pages/EditRecipe/index.tsx","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AuthService","accessToken","refreshToken","applicationUser","isLoggedIn","localStorage","getItem","setAccessToken","token","setItem","getAccessToken","setRefreshToken","getRefreshToken","setUserToStorage","user","JSON","stringify","getUserFromStorage","userString","parse","UserContext","React","createContext","setUser","AuthController","login","email","password","a","axios","post","process","LoginPage","useForm","errors","control","handleSubmit","history","useHistory","useContext","onSubmit","data","res","replace","alert","className","src","as","TextField","rules","required","type","id","name","label","fullWidth","message","Button","variant","style","borderRadius","color","to","RegisterPage","register","newUser","firstName","lastName","bio","passwordConfirm","useStyles","makeStyles","list","width","fullList","TemporaryDrawer","classes","useState","open","setOpen","Fragment","IconButton","onClick","edge","aria-label","Drawer","anchor","onClose","clsx","role","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","Divider","Navbar","AppBar","position","Toolbar","display","justifyContent","Typography","marginLeft","endIcon","RecipeCard","props","recipeImageUrl","setRecipeImageUrl","loading","setLoading","useEffect","firebase","storage","refFromURL","recipe","imageUrlUuid","imageExtension","getDownloadURL","then","url","console","log","pageTrigger","href","title","description","fontStyle","prepMinutes","cookMinutes","Rating","value","readOnly","Footer","textAlign","Axios","create","baseURL","headers","Authorization","interceptors","response","use","error","status","window","location","reload","catch","err","RecipeController","pageRecipes","pageNumber","get","pageRecipesByName","searchString","getRecipeById","getRecipesForUser","userUuid","createRecipe","protectedAxios","HomePage","recipes","setRecipes","page","setPage","recipesCount","setRecipesCount","setSearchString","setPageTrigger","pageAllRecipes","totalCount","margin","onChange","newValue","onRequestSearch","length","onCancelSearch","placeholder","Pagination","count","Math","ceil","shape","e","Modal","visible","children","setVisible","AboutPage","showModal","setShowModal","ViewRecipePage","setRecipe","match","params","recipeId","objectFit","alt","Number","ingredients","ingredient","instructions","CreateRecipeContent","useFormContext","useFieldArray","fields","append","remove","multiline","rows","marginTop","defaultValue","size","ImageCropper","setRecipeImageFile","upImg","setUpImg","imgRef","useRef","previewCanvasRef","unit","aspect","crop","setCrop","completedCrop","setCompletedCrop","pixelRatio","devicePixelRatio","generateDownload","previewCanvas","canvas","newWidth","newHeight","tmpCanvas","document","createElement","height","ctx","getContext","drawImage","getResizedCanvas","toBlob","blob","file","File","onLoad","useCallback","img","current","image","scaleX","naturalWidth","scaleY","naturalHeight","setTransform","imageSmoothingQuality","x","y","accept","target","files","reader","FileReader","addEventListener","result","readAsDataURL","htmlFor","component","onImageLoaded","c","onComplete","ref","round","CreateRecipe","methods","defaultValues","recipeImageFile","uploadImage","imageUuid","fileExtension","split","pop","child","put","formatIngredients","ingredientsArray","push","cookHours","prepHours","yieldAmount","uuid","maxWidth","ApplicationUserController","getApplicationUser","Error","logoutUser","delete","clear","AccountPage","currentUser","setCurrentUser","recipesForUser","setRecipesForUser","userObject","logout","PrivateRoute","rest","Component","render","pathname","EditRecipeContent","CropTest","EditRecipe","setValue","shouldDirty","BaseRouter","path","exact","App","theme","createMuiTheme","palette","main","secondary","success","typography","fontFamily","join","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","data-testid","Provider","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70c2bb9a.chunk.js","sourcesContent":["import { ApplicationUser } from '../models/ApplicationUser';\n\nexport class AuthService {\n  static accessToken: string = 'veganWebappAccessToken';\n  static refreshToken: string = 'veganWebappRefreshToken';\n  static applicationUser: string = 'veganWebappApplicationUser';\n\n  static isLoggedIn = () => {\n    if (localStorage.getItem(AuthService.accessToken)) return true;\n    return false;\n  };\n\n  static setAccessToken = (token: string) => {\n    return localStorage.setItem(AuthService.accessToken, token);\n  };\n\n  static getAccessToken = () => {\n    return localStorage.getItem(AuthService.accessToken);\n  };\n\n  static setRefreshToken = (refreshToken: string) => {\n    return localStorage.setItem(AuthService.refreshToken, refreshToken);\n  };\n\n  static getRefreshToken = () => {\n    return localStorage.getItem(AuthService.refreshToken);\n  };\n\n  static setUserToStorage = (user: ApplicationUser) => {\n    return localStorage.setItem(AuthService.applicationUser, JSON.stringify(user));\n  };\n\n  static getUserFromStorage = (): ApplicationUser => {\n    const userString = localStorage.getItem(AuthService.applicationUser);\n    return JSON.parse(userString!);\n  };\n}\n","import React from 'react';\nimport { ApplicationUser } from '../models/ApplicationUser';\nimport { AuthService } from '../utils/AuthService';\n\ntype UserContextProps = {\n  user: ApplicationUser;\n  setUser: any;\n};\n\nexport const UserContext = React.createContext<UserContextProps>({\n  user: AuthService.getUserFromStorage(),\n  setUser: null\n});\n","import axios from 'axios';\n\nexport class AuthController {\n  static login = async (email: string, password: string) => {\n    return await axios.post(`${process.env.REACT_APP_BACKEND_URL}/login`, { email, password });\n  };\n}\n","import React from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { Button, TextField } from '@material-ui/core';\nimport { AuthService } from '../../utils/AuthService';\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../../context';\nimport { AuthController } from '../../controllers/AuthController';\n\nexport const LoginPage = () => {\n  interface FormInput {\n    email: string;\n    password: string;\n  }\n\n  const { errors, control, handleSubmit } = useForm<FormInput>();\n  const history = useHistory();\n  const { setUser } = React.useContext(UserContext);\n\n  const onSubmit = async (data: FormInput) => {\n    try {\n      const { email, password } = data;\n      const res = await AuthController.login(email, password);\n\n      setUser(res.data.user);\n      AuthService.setUserToStorage(res.data.user);\n      AuthService.setAccessToken(res.data.accessToken);\n      AuthService.setRefreshToken(res.data.refreshToken);\n      history.replace('/');\n    } catch (err) {\n      alert(JSON.stringify(err));\n    }\n  };\n\n  return (\n    <div className='login'>\n      <img src={`${process.env.PUBLIC_URL}/veggies.jpg`} className='login__img' />\n      <form onSubmit={handleSubmit(onSubmit)} className='login__form container'>\n        <h2>Log into Plant Based Plate</h2>\n\n        <Controller\n          as={TextField}\n          control={control}\n          rules={{ required: 'Email Required' }}\n          type='text'\n          id='email'\n          name='email'\n          label='Email'\n          fullWidth\n        />\n        <div className='error'>{errors.email && errors.email.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          rules={{ required: 'Password Required' }}\n          type='password'\n          id='password'\n          name='password'\n          label='password'\n          fullWidth\n        />\n        <div className='error'>{errors.password && errors.password.message}</div>\n\n        <Button variant='contained' style={{ borderRadius: 0 }} color='primary' type='submit'>\n          Submit\n        </Button>\n        <div className='sign-up-link'>\n          Don't have an account yet? Sign up{' '}\n          <Link to='/register' style={{ color: 'purple' }}>\n            here\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport axios from 'axios';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useHistory, Link } from 'react-router-dom';\nimport { AuthService } from '../../utils/AuthService';\nimport { Button, TextField } from '@material-ui/core';\n\nexport const RegisterPage = () => {\n  interface FormInput {\n    email: string;\n    password: string;\n    passwordConfirm: string;\n    firstName: string;\n    lastName: string;\n  }\n\n  const { register, errors, control, handleSubmit } = useForm<FormInput>();\n  const history = useHistory();\n\n  const onSubmit = async (data: FormInput) => {\n    const newUser: any = {};\n    newUser.email = data.email;\n    newUser.password = data.password;\n    newUser.firstName = data.firstName;\n    newUser.lastName = data.lastName;\n    newUser.bio = '';\n\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/register`, newUser);\n      AuthService.setAccessToken(res.data.accessToken);\n      AuthService.setRefreshToken(res.data.refreshToken);\n      history.replace('/');\n    } catch (err) {\n      alert(JSON.stringify(err));\n    }\n  };\n\n  return (\n    <div className='register'>\n      <img src={`${process.env.PUBLIC_URL}/veggies.jpg`} className='register__img' />\n      <form onSubmit={handleSubmit(onSubmit)} className='register__form container'>\n        <h2>Register Account</h2>\n\n        <Controller\n          as={TextField}\n          control={control}\n          rules={{ required: 'First Name Required' }}\n          type='text'\n          id='firstName'\n          name='firstName'\n          label='firstName'\n          fullWidth\n        />\n        <div className='error'>{errors.firstName && errors.firstName.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          rules={{ required: 'Last Name Required' }}\n          type='text'\n          id='lastName'\n          name='lastName'\n          label='lastName'\n          fullWidth\n        />\n        <div className='error'>{errors.lastName && errors.lastName.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          rules={{ required: 'Email Required' }}\n          type='text'\n          id='email'\n          name='email'\n          label='Email'\n          fullWidth\n        />\n        <div className='error'>{errors.email && errors.email.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          rules={{ required: 'Password Required' }}\n          type='password'\n          id='password'\n          name='password'\n          label='password'\n          fullWidth\n        />\n        <div className='error'>{errors.password && errors.password.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          rules={{ required: 'Password Confirmation Required' }}\n          type='password'\n          id='passwordConfirm'\n          name='passwordConfirm'\n          label='passwordConfirm'\n          fullWidth\n        />\n        <div className='error'>{errors.passwordConfirm && errors.passwordConfirm.message}</div>\n\n        <Button variant='contained' style={{ borderRadius: 0 }} color='primary' type='submit'>\n          Submit\n        </Button>\n        <div className='sign-up-link'>\n          Already have an account? Sign in{' '}\n          <Link to='/loginPage' style={{ color: 'purple' }}>\n            here\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { IconButton } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = (open: any) => (event: any) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setOpen(!open);\n  };\n\n  const list = () => (\n    <div className={clsx(classes.list)} role='presentation'>\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <React.Fragment>\n        <IconButton onClick={() => setOpen(!open)} edge='end' color='inherit' aria-label='menu'>\n          <MenuIcon />\n        </IconButton>\n        <Drawer anchor='right' open={open} onClose={() => setOpen(!open)}>\n          {list()}\n        </Drawer>\n      </React.Fragment>\n    </div>\n  );\n}\n","import { AppBar, Toolbar, IconButton, Typography, Button } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport QuestionIcon from '@material-ui/icons/HelpOutline';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthService } from '../../utils/AuthService';\nimport TemporaryDrawer from './Drawer';\n\nexport const Navbar = () => {\n  if (!AuthService.isLoggedIn()) {\n    return (\n      <AppBar position='static'>\n        <div className='navbar__full'>\n          <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div>\n              <Link to='/'>\n                <Typography variant='h6'>Plant Based Plates</Typography>\n              </Link>\n            </div>\n\n            <div>\n              <Button style={{ marginLeft: 10 }} color='inherit'>\n                Browse\n              </Button>\n\n              <Link to='/about'>\n                <Button style={{ marginLeft: 10 }} color='inherit' endIcon={<QuestionIcon />}>\n                  About\n                </Button>\n              </Link>\n\n              <Link to='/loginPage'>\n                <Button style={{ marginLeft: 10 }} color='inherit'>\n                  Log In\n                </Button>\n              </Link>\n            </div>\n          </Toolbar>\n        </div>\n        <div className='navbar__mobile'>\n          <div>\n            <Link to='/'>\n              <Typography variant='h6'>Plant Based Plates</Typography>\n            </Link>\n          </div>\n          <div>\n            <TemporaryDrawer />\n          </div>\n        </div>\n      </AppBar>\n    );\n  } else\n    return (\n      <AppBar position='static'>\n        <div className='navbar__full'>\n          <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div>\n              <Link to='/'>\n                <Typography variant='h6'>Plant Based Plates</Typography>\n              </Link>\n            </div>\n            <div>\n              <Link to='/createRecipe'>\n                <Button style={{ marginLeft: 10 }} color='inherit' endIcon={<AddIcon />}>\n                  Create Recipe\n                </Button>\n              </Link>\n\n              <Button style={{ marginLeft: 10 }} color='inherit'>\n                Browse\n              </Button>\n              <Link to='/account'>\n                <Button style={{ marginLeft: 10 }} color='inherit' endIcon={<AccountCircleIcon />}>\n                  Account\n                </Button>\n              </Link>\n            </div>\n          </Toolbar>\n        </div>\n        <div className='navbar__mobile'>\n          <div>\n            <Link to='/'>\n              <Typography variant='h6'>Plant Based Plates</Typography>\n            </Link>\n          </div>\n          <div>\n            <TemporaryDrawer />\n          </div>\n        </div>\n      </AppBar>\n    );\n};\n","import { Rating } from '@material-ui/lab';\nimport React from 'react';\nimport { Recipe } from '../../models/Recipe';\nimport firebase from 'firebase';\nimport { SettingsRemoteOutlined } from '@material-ui/icons';\n\ninterface Props {\n  recipe: Recipe;\n  pageTrigger?: boolean;\n}\n\nexport const RecipeCard = (props: Props) => {\n  const [recipeImageUrl, setRecipeImageUrl] = React.useState('');\n  const [loading, setLoading] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    // Get a reference to the storage service, which is used to create references in your storage bucket\n    var storage = firebase.storage();\n    //var gsRef = storage.refFromURL('gs://vegan-webapp.appspot.com/surlyCatBeingEjected.jpg');\n    const gsRef = storage.refFromURL(`gs://vegan-webapp.appspot.com/${props.recipe.imageUrlUuid}.${props.recipe.imageExtension}`);\n    gsRef.getDownloadURL().then((url: any) => {\n      console.log(url);\n      setRecipeImageUrl(url);\n      setLoading(false);\n    });\n  }, [props.pageTrigger]);\n\n  if (loading) return null;\n\n  return (\n    <a className='recipe-card' href={`/viewRecipe/${props.recipe.id}`}>\n      <img className='recipe-card__image' src={recipeImageUrl} />\n      <div className='container'>\n        <h4>\n          <b>{props.recipe.title}</b>\n        </h4>\n        <div className='recipe-card__description'>\n          <p>{props.recipe.description}</p>\n        </div>\n        <p style={{ fontStyle: 'italic' }}>Prep time: {props.recipe.prepMinutes} min.</p>\n        <p style={{ fontStyle: 'italic' }}>Cook time: {props.recipe.cookMinutes} min.</p>\n        <Rating name='read-only' value={5} readOnly />\n      </div>\n    </a>\n  );\n};\n","import React from 'react';\n\nexport const Footer = () => {\n  return (\n    <div className='footer-container'>\n      <footer className='footer'>\n        <p style={{ textAlign: 'center' }}>Plant Based Plates 2020</p>\n      </footer>\n    </div>\n  );\n};\n","import Axios from 'axios';\nimport { AuthService } from './AuthService';\n\nconst axios = Axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  headers: {\n    Authorization: `Bearer ${AuthService.getAccessToken()}`\n  }\n});\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response) {\n      console.log(error.response.status);\n      if (error.response.status === 401) {\n        //Try to generate new accessToken from refreshToken, if fails redirect to login\n        Axios.post(`${process.env.REACT_APP_BACKEND_URL}/token`, { refreshToken: AuthService.getRefreshToken() })\n          .then((res: any) => {\n            AuthService.setAccessToken(res.data.accessToken);\n          })\n          .then(() => window.location.reload())\n          .catch((err) => {\n            console.log('HERE', err);\n            // window.location.href = '/loginPage';\n          });\n      }\n    }\n    return error;\n  }\n);\n\nexport default axios;\n","import axios from 'axios';\nimport protectedAxios from '../utils/axios';\nimport { Recipe } from '../models/Recipe';\n\nexport class RecipeController {\n  static pageRecipes = async (pageNumber: number) => {\n    try {\n      let res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/pageRecipes/${pageNumber}`);\n      return res;\n    } catch (err) {\n      console.log('ERROR: ', err);\n    }\n  };\n\n  static pageRecipesByName = async (pageNumber: number, searchString: string) => {\n    try {\n      let res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/pageRecipesByName/${pageNumber}/${searchString}`);\n      return res;\n    } catch (err) {\n      console.log('ERR: ', err);\n    }\n  };\n\n  static getRecipeById = async (id: number) => {\n    try {\n      let recipe = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/getRecipeById/${id}`);\n\n      return recipe;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  static getRecipesForUser = async (userUuid: string) => {\n    try {\n      let recipe = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/getRecipesForUser/${userUuid}`);\n\n      return recipe.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  static createRecipe = async (recipe: Recipe, userUuid: string) => {\n    try {\n      return protectedAxios.post(`${process.env.REACT_APP_BACKEND_URL}/createRecipe`, { recipe, userUuid });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { RecipeCard } from '../../components/RecipeCard';\nimport { Footer } from '../../components/Footer';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { Recipe } from '../../models/Recipe';\nimport Pagination from '@material-ui/lab/Pagination';\nimport SearchBar from 'material-ui-search-bar';\n\nexport const HomePage = () => {\n  const [recipes, setRecipes] = React.useState<Recipe[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [recipesCount, setRecipesCount] = React.useState<number>(0);\n  const [searchString, setSearchString] = React.useState<string>('');\n  const [pageTrigger, setPageTrigger] = React.useState<boolean>(false);\n  const [loading, setLoading] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    pageAllRecipes();\n  }, [page]);\n\n  const pageAllRecipes = () => {\n    RecipeController.pageRecipes(page).then((res: any) => {\n      setLoading(true);\n      setRecipes(res.data.recipes);\n      setRecipesCount(res.data.totalCount);\n      setPageTrigger(!pageTrigger);\n      setLoading(false);\n    });\n  };\n\n  const searchForRecipes = () => {\n    if (searchString.length > 0) {\n      RecipeController.pageRecipesByName(page, searchString).then((res: any) => {\n        setRecipes(res.data.recipes);\n        setRecipesCount(res.data.totalCount);\n        setPageTrigger(!pageTrigger);\n      });\n    }\n  };\n\n  const handlePage = (e: any, pageNumber: number) => {\n    console.log(pageNumber);\n    setPage(pageNumber - 1);\n  };\n\n  if (loading) return null;\n\n  return (\n    <div className='home-page'>\n      <Navbar />\n      <div className='contain'>\n        <div style={{ display: 'flex', justifyContent: 'flex-end', margin: '10px' }}>\n          <div className='home-page__search-bar'>\n            <SearchBar\n              style={{ borderRadius: 3 }}\n              value={searchString}\n              onChange={(newValue) => setSearchString(newValue)}\n              onRequestSearch={() => searchForRecipes()}\n              onCancelSearch={() => {\n                setSearchString('');\n                pageAllRecipes();\n              }}\n              placeholder='Search for a recipe...'\n            />\n          </div>\n        </div>\n        <div className='recipe-card-container'>\n          {recipes.map((recipe, index) => (\n            <RecipeCard pageTrigger={pageTrigger} key={index} recipe={recipe} />\n          ))}\n        </div>\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'center', margin: '1em' }}>\n        <Pagination count={Math.ceil(recipesCount / 8)} color='primary' shape='rounded' page={page + 1} onChange={handlePage} />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'center', margin: '1em' }}>\n        <div>\n          {recipesCount} total {recipesCount === 1 ? 'recipe' : 'recipes'}\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { FaTimes } from 'react-icons/fa';\n\ninterface Props {\n  visible: boolean;\n  setVisible?: (value: boolean) => void;\n  children?: any;\n}\n\nexport const Modal = (props: Props) => {\n  return (\n    <div className={props.visible ? 'modal-background-active' : 'modal-background'}>\n      <div className='modal'>\n        {props.children}\n        <span className='modal-close' onClick={() => props.setVisible && props.setVisible(false)}>\n          <FaTimes />\n        </span>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { Footer } from '../../components/Footer';\nimport { Modal } from '../../components/Modal';\n\nexport const AboutPage = () => {\n  const [showModal, setShowModal] = React.useState<boolean>(false);\n\n  return (\n    <div className='about-page'>\n      <Navbar />\n      <div>\n        <h1>About Us</h1>\n        <div className='about-page__content'>\n          <p className='about-page__description'>\n            Plant based plates is a web app created by myself (Jake Ruth) as a way to bring plant based eaters together to share\n            recipes, insights, and spread the joy of vegan cooking! I have found immense joy in creating meals are low cost,\n            ethical, and better for the environment! Eating plant based is a great and easy way to do all of these things. My hope\n            is that with our community, we can grow a large collection of plant based recipes to show the world that you don't\n            have to restrict to eat a vegan diet! :)\n          </p>\n          <div className='about-page__contact'>\n            <h2>Contact Us!</h2>\n            <p>\n              Send an email to <strong>plantbasedplates@gmail.com</strong> for feedback and suggestions\n            </p>\n            <button className='btn-primary' onClick={() => setShowModal(true)}>\n              Sign up for mailing list!\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className='footer-fixed'>\n        <Footer />\n      </div>\n      <Modal visible={showModal} setVisible={setShowModal}>\n        <h2>Subscribe to our mailing list!</h2>\n        <label>Enter your email:</label>\n        <input type='text' />\n        <button className='btn-primary' onClick={() => setShowModal(!showModal)}>\n          Submit\n        </button>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { Footer } from '../../components/Footer';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { Recipe } from '../../models/Recipe';\nimport firebase from 'firebase';\n\nexport const ViewRecipePage = (props: any) => {\n  const [recipe, setRecipe] = React.useState<Recipe | null>(null);\n  const [recipeImageUrl, setRecipeImageUrl] = React.useState<string>('');\n  const [loading, setLoading] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    if (recipeImageUrl.length > 0) setLoading(false);\n  }, [recipeImageUrl]);\n\n  React.useEffect(() => {\n    RecipeController.getRecipeById(props.match.params.recipeId)\n      .then((res) => {\n        setRecipe(res!.data);\n\n        var storage = firebase.storage();\n\n        const gsRef = storage.refFromURL(`gs://vegan-webapp.appspot.com/${res!.data.imageUrlUuid}.${res!.data.imageExtension}`);\n        gsRef.getDownloadURL().then((url: any) => {\n          console.log(url);\n          setRecipeImageUrl(url);\n        });\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  if (recipe == null) return null;\n  if (loading) return null;\n\n  return (\n    <div>\n      <Navbar />\n      <div className='view-recipe'>\n        <div className='view-recipe__header'>\n          <img src={recipeImageUrl} style={{ objectFit: 'cover' }} alt='recipe image' className='view-recipe__img' />\n          <div>\n            <h1>{recipe?.title}</h1>\n            <p>Prep Time: {recipe?.prepMinutes} minutes</p>\n            <p>Cook Time: {recipe?.cookMinutes} minutes</p>\n            <p>Total Time: {Number(recipe?.prepMinutes!) + Number(recipe?.cookMinutes!)} minutes</p>\n          </div>\n        </div>\n        <div>{recipe.description}</div>\n        <hr />\n        <div className='view-recipe__content'>\n          <div className='view-recipe__item'>\n            <h2>Ingredients:</h2>\n            <ul>\n              {recipe?.ingredients.map((ingredient, index) => {\n                return <li key={index}>{ingredient}</li>;\n              })}\n            </ul>\n          </div>\n          <div className='view-recipe__item'>\n            <h2>Instructions:</h2>\n            <p className='view-recipe__instructions'>{recipe?.instructions}</p>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n","import { TextField, Button } from '@material-ui/core';\nimport React from 'react';\nimport { Controller, useFieldArray, useFormContext } from 'react-hook-form';\n\nexport const CreateRecipeContent = () => {\n  const { control, errors } = useFormContext(); // retrieve all hook methods\n  const { fields, append, remove } = useFieldArray({ control, name: 'ingredients' });\n  return (\n    <div className='create-recipe__content'>\n      <div className='create-recipe__section'>\n        <Controller\n          as={TextField}\n          control={control}\n          rules={{ required: 'Title Required' }}\n          type='text'\n          id='title'\n          name='title'\n          label='Title'\n          fullWidth\n        />\n        <div className='error'>{errors.title && errors.title.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          multiline\n          fullWidth\n          variant='outlined'\n          rows={5}\n          style={{ marginTop: 20 }}\n          name='description'\n          label='Description'\n          rules={{ required: 'Description Required' }}\n        />\n        <div className='error'>{errors.description && errors.description.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          multiline\n          fullWidth\n          variant='outlined'\n          rows={10}\n          style={{ marginTop: 20 }}\n          name='instructions'\n          label='Instructions'\n          rules={{ required: 'Instructions Required' }}\n        />\n        <div className='error'>{errors.description && errors.description.message}</div>\n      </div>\n\n      <div className='create-recipe__section'>\n        <h3 style={{ fontStyle: 'italic' }}>Prep Time</h3>\n        <div style={{ display: 'flex' }}>\n          <Controller as={TextField} control={control} type='number' name='prepHours' label='Hours' defaultValue={0} />\n          <Controller as={TextField} control={control} type='number' name='prepMinutes' label='Minutes' defaultValue={0} />\n        </div>\n\n        <h3 style={{ fontStyle: 'italic' }}>Cook Time</h3>\n        <div style={{ display: 'flex' }}>\n          <Controller as={TextField} control={control} type='number' name='cookHours' label='Hours' defaultValue={0} />\n          <Controller as={TextField} control={control} type='number' name='cookMinutes' label='Minutes' defaultValue={0} />\n        </div>\n        <Controller as={TextField} control={control} name='yieldAmount' label='Yield' />\n        <h3 style={{ fontStyle: 'italic' }}>Ingredients</h3>\n\n        {fields.map((ingredient, index) => (\n          <div style={{ display: 'flex' }}>\n            <Controller as={TextField} fullWidth name={`ingredients[${index}].value`} control={control} />\n            <Button variant='contained' size='small' style={{ borderRadius: 0 }} color='secondary' onClick={() => remove(index)}>\n              Delete\n            </Button>\n          </div>\n        ))}\n        <Button\n          type='button'\n          style={{ marginTop: '1em' }}\n          variant='contained'\n          color='primary'\n          size='small'\n          onClick={() => append({ value: '' })}>\n          Add Ingredient\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { Button } from '@material-ui/core';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport CameraIcon from '@material-ui/icons/CameraAlt';\n\nexport const ImageCropper = ({ setRecipeImageFile }) => {\n  const [upImg, setUpImg] = useState();\n  const imgRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 1 / 1 });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // Increase pixel density for crop preview quality on retina screens.\n  const pixelRatio = window.devicePixelRatio || 1;\n\n  // We resize the canvas down when saving on retina devices otherwise the image\n  // will be double or triple the preview size.\n  function getResizedCanvas(canvas, newWidth, newHeight) {\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = newWidth;\n    tmpCanvas.height = newHeight;\n\n    const ctx = tmpCanvas.getContext('2d');\n\n    try {\n      if (canvas.width > 0 && canvas.height > 0) {\n        ctx.drawImage(canvas, 0, 0, canvas.width, canvas.height, 0, 0, newWidth, newHeight);\n      }\n    } catch (err) {\n      alert(err);\n    }\n\n    return tmpCanvas;\n  }\n\n  function generateDownload(previewCanvas, crop) {\n    if (!crop || !previewCanvas) {\n      return;\n    }\n\n    const canvas = getResizedCanvas(previewCanvas, crop.width, crop.height);\n\n    canvas.toBlob(\n      (blob) => {\n        let file = new File([blob], 'png', { type: 'image/png' });\n\n        setRecipeImageFile(file);\n      },\n      'image/png',\n      1\n    );\n  }\n\n  const onSelectFile = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n      return;\n    }\n\n    const image = imgRef.current;\n    const canvas = previewCanvasRef.current;\n    const crop = completedCrop;\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = crop.width * pixelRatio;\n    canvas.height = crop.height * pixelRatio;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    generateDownload(previewCanvasRef.current, completedCrop);\n  }, [completedCrop]);\n\n  return (\n    <div className='App'>\n      <div>\n        <input style={{ display: 'none' }} type='file' id='raised-button-file' accept='image/*' onChange={onSelectFile} />\n        <label htmlFor='raised-button-file'>\n          <Button endIcon={<CameraIcon />} style={{ borderRadius: 0, marginTop: 10 }} variant='contained' component='span'>\n            Upload Photo\n          </Button>\n        </label>\n      </div>\n      <ReactCrop\n        src={upImg}\n        onImageLoaded={onLoad}\n        crop={crop}\n        onChange={(c) => setCrop(c)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n      <div>\n        <canvas\n          ref={previewCanvasRef}\n          // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n          style={{\n            width: Math.round(completedCrop?.width ?? 0),\n            height: Math.round(completedCrop?.height ?? 0),\n            display: 'none'\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Button } from '@material-ui/core';\nimport { Recipe } from '../../models/Recipe';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { useHistory } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { CreateRecipeContent } from './components/CreateRecipeContent';\nimport { ImageCropper } from './components/ImageCropper';\nimport { UserContext } from '../../context';\nimport { RecipeFields } from './utils';\n\nexport const CreateRecipe = () => {\n  const methods = useForm<RecipeFields>({ defaultValues: { ingredients: [{ value: '' }] } });\n\n  const history = useHistory();\n  const [recipeImageFile, setRecipeImageFile] = React.useState<File | null>(null);\n  const { user } = React.useContext(UserContext);\n\n  const uploadImage = (imageUuid: string) => {\n    const fileExtension = recipeImageFile!.name.split('.').pop();\n\n    let rootRef = firebase.storage().ref();\n    let fileRef = rootRef.child(`${imageUuid}.${fileExtension}`);\n\n    fileRef.put(recipeImageFile!).then((res) => console.log(res));\n  };\n\n  const onSubmit = async (data: RecipeFields, e: any) => {\n    const formatIngredients = () => {\n      let ingredientsArray: string[] = [];\n      data.ingredients.map((ingredient: any) => {\n        ingredientsArray.push(ingredient.value);\n      });\n\n      return ingredientsArray;\n    };\n\n    let recipe: Recipe = {\n      title: data.title,\n      description: data.description,\n      cookMinutes: Number(data.cookMinutes) + data.cookHours * 60,\n      prepMinutes: Number(data.prepMinutes) + data.prepHours * 60,\n      ingredients: formatIngredients(),\n      instructions: data.instructions,\n      yieldAmount: data.yieldAmount,\n      imageExtension: recipeImageFile!.name.split('.').pop()\n    };\n\n    try {\n      const res = await RecipeController.createRecipe(recipe, user.uuid);\n      uploadImage(res!.data.imageUrlUuid);\n      history.push('/');\n    } catch (err) {\n      console.log('ERR: ', err);\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <form onSubmit={methods.handleSubmit(onSubmit)}>\n        <h1 style={{ textAlign: 'center' }}>Create Recipe</h1>\n        <div className='create-recipe'>\n          <FormProvider {...methods}>\n            <CreateRecipeContent />\n          </FormProvider>\n          <br />\n          <ImageCropper setRecipeImageFile={setRecipeImageFile} />\n          <Button type='submit' variant='contained' color='primary' style={{ borderRadius: 0, maxWidth: 200, marginTop: '1em' }}>\n            Save Recipe!\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import axios from '../utils/axios';\n\nexport class ApplicationUserController {\n  static getApplicationUser = async (uuid: string) => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/getApplicationUser/${uuid}`);\n      return res.data;\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n\n  static logoutUser = async () => {\n    return axios.delete(`${process.env.REACT_APP_BACKEND_URL}/logout`).catch(() => {\n      localStorage.clear();\n    });\n  };\n}\n","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Navbar } from '../../components/Navbar';\nimport { RecipeCard } from '../../components/RecipeCard';\nimport { UserContext } from '../../context';\nimport { ApplicationUserController } from '../../controllers/ApplicationUserController';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { ApplicationUser } from '../../models/ApplicationUser';\nimport { Recipe } from '../../models/Recipe';\n\nexport const AccountPage = () => {\n  const history = useHistory();\n  const { user } = React.useContext(UserContext);\n  const [currentUser, setCurrentUser] = React.useState<ApplicationUser>();\n  const [recipesForUser, setRecipesForUser] = React.useState<Recipe[]>();\n\n  React.useEffect(() => {\n    ApplicationUserController.getApplicationUser(user.uuid).then((userObject) => {\n      setCurrentUser(userObject);\n    });\n\n    RecipeController.getRecipesForUser(user.uuid).then((recipes) => {\n      setRecipesForUser(recipes);\n    });\n  }, []);\n\n  const logout = async () => {\n    await ApplicationUserController.logoutUser();\n    localStorage.clear();\n    history.replace('/loginPage');\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <h2>Good afternoon {currentUser?.firstName}!</h2>\n      <h2>Your Recipes:</h2>\n      <div className='recipe-card-container'>\n        {recipesForUser?.map((recipe, index) => {\n          return <RecipeCard recipe={recipe} />;\n        })}\n      </div>\n      <div>\n        <Button onClick={() => logout()}>Logout</Button>\n      </div>\n    </div>\n  );\n};\n","// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\n\nimport React from 'react';\nimport { AuthService } from '../utils/AuthService';\nimport { Redirect, Route, RouteProps, RouteComponentProps } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component, ...rest }: RouteProps) => {\n  if (!component) {\n    throw Error('component is undefined');\n  }\n\n  const Component = component; // JSX Elements have to be uppercase.\n  const render = (props: RouteComponentProps<any>): React.ReactNode => {\n    if (AuthService.isLoggedIn()) {\n      return <Component {...props} />;\n    }\n    return <Redirect to={{ pathname: '/' }} />;\n  };\n\n  return <Route {...rest} render={render} />;\n};\n","import { TextField, Button } from '@material-ui/core';\nimport React from 'react';\nimport { Controller, useFieldArray, useFormContext } from 'react-hook-form';\nimport { Recipe } from '../../../models/Recipe';\n\ninterface Props {\n  recipe: Recipe;\n}\n\nexport const EditRecipeContent = (props: Props) => {\n  const { control, errors } = useFormContext(); // retrieve all hook methods\n  const { fields, append, remove } = useFieldArray({ control, name: 'ingredients' });\n  return (\n    <div className='create-recipe__content'>\n      <div className='create-recipe__section'>\n        <Controller\n          as={TextField}\n          control={control}\n          rules={{ required: 'Title Required' }}\n          type='text'\n          id='title'\n          name='title'\n          label='Title'\n          fullWidth\n          defaultValue=''\n        />\n        <div className='error'>{errors.title && errors.title.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          multiline\n          fullWidth\n          variant='outlined'\n          rows={5}\n          style={{ marginTop: 20 }}\n          name='description'\n          label='Description'\n          rules={{ required: 'Description Required' }}\n          defaultValue=''\n        />\n        <div className='error'>{errors.description && errors.description.message}</div>\n\n        <Controller\n          as={TextField}\n          control={control}\n          multiline\n          fullWidth\n          variant='outlined'\n          rows={10}\n          style={{ marginTop: 20 }}\n          name='instructions'\n          label='Instructions'\n          rules={{ required: 'Instructions Required' }}\n        />\n        <div className='error'>{errors.description && errors.description.message}</div>\n      </div>\n\n      <div className='create-recipe__section'>\n        <h3 style={{ fontStyle: 'italic' }}>Prep Time</h3>\n        <div style={{ display: 'flex' }}>\n          <Controller as={TextField} control={control} type='number' name='prepHours' label='Hours' defaultValue={0} />\n          <Controller as={TextField} control={control} type='number' name='prepMinutes' label='Minutes' defaultValue={0} />\n        </div>\n\n        <h3 style={{ fontStyle: 'italic' }}>Cook Time</h3>\n        <div style={{ display: 'flex' }}>\n          <Controller as={TextField} control={control} type='number' name='cookHours' label='Hours' defaultValue={0} />\n          <Controller as={TextField} control={control} type='number' name='cookMinutes' label='Minutes' defaultValue={0} />\n        </div>\n        <Controller as={TextField} control={control} name='yieldAmount' label='Yield' />\n        <h3 style={{ fontStyle: 'italic' }}>Ingredients</h3>\n\n        {fields.map((ingredient, index) => (\n          <div style={{ display: 'flex' }}>\n            <Controller as={TextField} fullWidth name={`ingredients[${index}].value`} control={control} />\n            <Button variant='contained' size='small' style={{ borderRadius: 0 }} color='secondary' onClick={() => remove(index)}>\n              Delete\n            </Button>\n          </div>\n        ))}\n        <Button\n          type='button'\n          style={{ marginTop: '1em' }}\n          variant='contained'\n          color='primary'\n          size='small'\n          onClick={() => append({ value: '' })}>\n          Add Ingredient\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { Button } from '@material-ui/core';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport CameraIcon from '@material-ui/icons/CameraAlt';\n\nexport const CropTest = ({ setRecipeImageFile }) => {\n  const [upImg, setUpImg] = useState();\n  const imgRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 1 / 1 });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  // Increase pixel density for crop preview quality on retina screens.\n  const pixelRatio = window.devicePixelRatio || 1;\n\n  // We resize the canvas down when saving on retina devices otherwise the image\n  // will be double or triple the preview size.\n  function getResizedCanvas(canvas, newWidth, newHeight) {\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = newWidth;\n    tmpCanvas.height = newHeight;\n\n    const ctx = tmpCanvas.getContext('2d');\n\n    try {\n      if (canvas.width > 0 && canvas.height > 0) {\n        ctx.drawImage(canvas, 0, 0, canvas.width, canvas.height, 0, 0, newWidth, newHeight);\n      }\n    } catch (err) {\n      alert(err);\n    }\n\n    return tmpCanvas;\n  }\n\n  function generateDownload(previewCanvas, crop) {\n    if (!crop || !previewCanvas) {\n      return;\n    }\n\n    const canvas = getResizedCanvas(previewCanvas, crop.width, crop.height);\n\n    canvas.toBlob(\n      (blob) => {\n        let file = new File([blob], 'png', { type: 'image/png' });\n\n        setRecipeImageFile(file);\n      },\n      'image/png',\n      1\n    );\n  }\n\n  const onSelectFile = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n      return;\n    }\n\n    const image = imgRef.current;\n    const canvas = previewCanvasRef.current;\n    const crop = completedCrop;\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = crop.width * pixelRatio;\n    canvas.height = crop.height * pixelRatio;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    generateDownload(previewCanvasRef.current, completedCrop);\n  }, [completedCrop]);\n\n  return (\n    <div className='App'>\n      <div>\n        <input style={{ display: 'none' }} type='file' id='raised-button-file' accept='image/*' onChange={onSelectFile} />\n        <label htmlFor='raised-button-file'>\n          <Button endIcon={<CameraIcon />} style={{ borderRadius: 0, marginTop: 10 }} variant='contained' component='span'>\n            Upload Photo\n          </Button>\n        </label>\n      </div>\n      <ReactCrop\n        src={upImg}\n        onImageLoaded={onLoad}\n        crop={crop}\n        onChange={(c) => setCrop(c)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n      <div>\n        <canvas\n          ref={previewCanvasRef}\n          // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n          style={{\n            width: Math.round(completedCrop?.width ?? 0),\n            height: Math.round(completedCrop?.height ?? 0),\n            display: 'none'\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Button } from '@material-ui/core';\nimport { Recipe } from '../../models/Recipe';\nimport { RecipeController } from '../../controllers/RecipeController';\nimport { useHistory } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { EditRecipeContent } from './components/EditRecipeContent';\nimport { CropTest } from './components/CropTest';\n\ninterface IFormInput {\n  title: string;\n  description: string;\n  instructions: string;\n  ingredients: any[];\n  prepHours: number;\n  prepMinutes: number;\n  cookHours: number;\n  cookMinutes: number;\n  yieldAmount: string;\n}\n\nexport const EditRecipe = (props: any) => {\n  const history = useHistory();\n  const [recipeImageFile, setRecipeImageFile] = React.useState<File | null>(null);\n  const [recipe, setRecipe] = React.useState<any>({});\n\n  const methods = useForm<IFormInput>();\n\n  React.useEffect(() => {\n    RecipeController.getRecipeById(props.match.params.recipeId).then((res) => {\n      setRecipe(res!.data);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    methods.setValue('title', recipe.title, { shouldDirty: true });\n    methods.setValue('description', recipe.description, { shouldDirty: true });\n  }, [recipe]);\n\n  const uploadImage = (imageUuid: string) => {\n    const fileExtension = recipeImageFile!.name.split('.').pop();\n\n    let rootRef = firebase.storage().ref();\n    let fileRef = rootRef.child(`${imageUuid}.${fileExtension}`);\n\n    fileRef.put(recipeImageFile!).then((res) => console.log(res));\n  };\n\n  const onSubmit = async (data: IFormInput, e: any) => {\n    const formatIngredients = () => {\n      let ingredientsArray: string[] = [];\n      data.ingredients.map((ingredient: any) => {\n        ingredientsArray.push(ingredient.value);\n      });\n\n      return ingredientsArray;\n    };\n\n    let recipe: Recipe = {\n      title: data.title,\n      description: data.description,\n      cookMinutes: Number(data.cookMinutes) + data.cookHours * 60,\n      prepMinutes: Number(data.prepMinutes) + data.prepHours * 60,\n      ingredients: formatIngredients(),\n      instructions: data.instructions,\n      yieldAmount: data.yieldAmount,\n      imageExtension: recipeImageFile!.name.split('.').pop()\n    };\n\n    try {\n      // const res = await RecipeController.createRecipe(recipe);\n      // uploadImage(res!.data.imageUrlUuid);\n      history.push('/');\n    } catch (err) {\n      console.log('ERR: ', err);\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <form onSubmit={methods.handleSubmit(onSubmit)}>\n        <h1 style={{ textAlign: 'center' }}>Create Recipe</h1>\n        <div className='create-recipe'>\n          <FormProvider {...methods}>\n            <EditRecipeContent recipe={recipe} />\n          </FormProvider>\n          <br />\n          <CropTest setRecipeImageFile={setRecipeImageFile} />\n          <Button type='submit' variant='contained' color='primary' style={{ borderRadius: 0, maxWidth: 200, marginTop: '1em' }}>\n            Save Recipe!\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { LoginPage } from '../pages/LoginPage';\nimport { RegisterPage } from '../pages/Register';\nimport { HomePage } from '../pages/HomePage';\nimport { AboutPage } from '../pages/AboutPage';\nimport { ViewRecipePage } from '../pages/ViewRecipePage';\nimport { CreateRecipe } from '../pages/CreateRecipe';\nimport { AccountPage } from '../pages/AccountPage';\nimport { PrivateRoute } from './ProtectedRoute';\nimport { EditRecipe } from '../pages/EditRecipe';\n\nexport const BaseRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact component={HomePage} />\n        <Route path='/loginPage' component={LoginPage} />\n        <Route path='/register' component={RegisterPage} />\n        <Route path='/about' component={AboutPage} />\n        <Route path='/viewRecipe/:recipeId' component={ViewRecipePage} />\n        <Route path='/account' component={AccountPage} />\n\n        <PrivateRoute path='/createRecipe' component={CreateRecipe} />\n        <PrivateRoute path='/editRecipe/:recipeId' component={EditRecipe} />\n      </Switch>\n    </Router>\n  );\n};\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport './App.scss';\nimport { BaseRouter } from './router';\nimport firebase from 'firebase';\nimport { UserContext } from './context';\nimport { AuthService } from './utils/AuthService';\n\nfunction App() {\n  const [user, setUser] = React.useState(AuthService.getUserFromStorage());\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#303030'\n      },\n      secondary: {\n        main: '#FF5E5B'\n      },\n      error: {\n        main: '#FF5E5B'\n      },\n      success: {\n        main: '#20b2aa'\n      }\n    },\n    typography: {\n      fontFamily: ['Verdana'].join(',')\n    }\n  });\n\n  var firebaseConfig = {\n    apiKey: 'AIzaSyAkL0lof7kkTmXwPw_xsyf57ZkrUwIbVxo',\n    authDomain: 'vegan-webapp.firebaseapp.com',\n    databaseURL: 'https://vegan-webapp.firebaseio.com',\n    projectId: 'vegan-webapp',\n    storageBucket: 'vegan-webapp.appspot.com',\n    messagingSenderId: '29504851544',\n    appId: '1:29504851544:web:f3981ecbd3eb6f51c7042d',\n    measurementId: 'G-2B8615KNJN'\n  };\n\n  React.useEffect(() => {\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    let storedUser = AuthService.getUserFromStorage();\n  }, []);\n\n  return (\n    <header data-testid='app-element'>\n      <MuiThemeProvider theme={theme}>\n        <UserContext.Provider value={{ user, setUser }}>\n          <BaseRouter />\n        </UserContext.Provider>\n      </MuiThemeProvider>\n    </header>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}